{"version":3,"sources":["Accelerometer.js","GPS.js","Audio.js","Marking.js","App.js","index.js"],"names":["Accelerometer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onDeviceMotion","event","setState","dme","updateAccelerometerValues","state","acceleration","x","y","z","interval","error","window","ondevicemotion","react_default","a","createElement","id","className","Component","GPS","updatePosition","position","positionError","err","errorCode","code","errorMessage","message","coords","longitude","latitude","navigator","geolocation","watchPosition","enableHighAccuracy","maximumAge","timeout","MediaRecorder","require","Audio","recordAudioStream","stream","options","mimeType","isTypeSupported","mediaRecorder","newMediaRecorder","lastRecorded","lastRecordedUrl","mediaDevices","getUserMedia","audio","video","then","recordedAudioURL","recordedAudio","URL","createObjectURL","controls","key","type","src","href","download","split","Marking","updateLeftError","newValue","target","value","leftError","updateError","parseInt","updateRightError","rightError","mark","timestamp","Date","now","newMark","lastMark","step","placeholder","onChange","disabled","errorDisabled","toString","onClick","App","reset","recordedAccelerometerValues","recordedPositionValues","recordedMarks","recordedAudioBlobs","recordedOutput","fftOutput","recordedAudioStartTimestamp","recordedAudioEndTimestamp","csv","csvBlob","fr","FileReader","addEventListener","e","console","log","counter","deviceMotionEvent","accelerometerValues","recording","push","saveRecording","data","size","pushNewAudioBlob","blob","updateMarkError","side","markLeftError","markRightError","toggleRecording","stop","start","blobLengthMS","lr","Blob","processRecording","AudioContext","webkitAudioContext","decodeAudioData","result","audioBuffer","offlineAudioCtx","OfflineAudioContext","numberOfChannels","length","sampleRate","webkitOfflineAudioContext","source","createBufferSource","analyser","createAnalyser","buffer","fftSize","processor","createScriptProcessor","connect","destination","onaudioprocess","processSample","oncomplete","renderedBuffer","formatData","startRendering","readAsArrayBuffer","bufferLength","frequencyBinCount","dataArray","Uint8Array","getByteFrequencyData","positionValues","audioFFTValues","markedValues","startTimestamp","endTimestamp","numberOfMS","fftRatio","parseFloat","formattedData","accelIndex","positionIndex","audioFFTIndex","audioFFTUntil","labels","i","currentTimestamp","accelerometerValue","positionValue","audioFFTValue","concat","toConsumableArray","slice","nextTimestamp","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","leftMark","rightMark","return","createCSV","csvContent","join","forEach","arr","mic","src_Accelerometer","src_GPS","src_Audio","src_Marking","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c57a9985.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Accelerometer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dme: {\r\n                acceleration: {\r\n                    x: null,\r\n                    y: null,\r\n                    z: null\r\n                },\r\n                interval: null\r\n            },\r\n            error: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.ondevicemotion = this.onDeviceMotion\r\n    }\r\n\r\n    onDeviceMotion = (event) => {\r\n        this.setState({\r\n            dme: event\r\n        });\r\n        this.props.updateAccelerometerValues(event);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"accelerometer\">\r\n                <h3 className=\"title is-3\">Accelerometer</h3>\r\n                <p>\r\n                    {/* not standard ios uses seconds and windows/android uses milliseconds */}\r\n                    interval for accel: {this.state.dme.interval}\r\n                </p>\r\n                <p>\r\n                    x: {this.state.dme.acceleration.x}\r\n                </p>\r\n                <p>\r\n                    y: {this.state.dme.acceleration.y}\r\n                </p>\r\n                <p>\r\n                    z: {this.state.dme.acceleration.z}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Accelerometer;","import React, { Component } from 'react';\r\n\r\nclass GPS extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: false,\r\n            errorCode: null,\r\n            errorMessage: null,\r\n            position: {\r\n                coords: {\r\n                    longitude: null,\r\n                    latitude: null\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (navigator.geolocation != null) {\r\n            navigator.geolocation.watchPosition(this.updatePosition, this.positionError, {\r\n                enableHighAccuracy: this.props.enableHighAccuracy,\r\n                maximumAge: this.props.maximumAge,\r\n                timeout: this.props.timeout\r\n            });\r\n        }\r\n    }\r\n\r\n    updatePosition = (position) => {\r\n        this.setState({\r\n            position: position\r\n        });\r\n        this.props.updatePosition(position);\r\n    }\r\n\r\n    positionError = (err) => {\r\n        this.setState({\r\n            error: true,\r\n            errorCode: err.code,\r\n            errorMessage: err.message\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"gps\">\r\n                <h3 className=\"title is-3\">GPS Coordinates</h3>\r\n                <p>\r\n                    longitude: {this.state.position.coords.longitude}\r\n                </p>\r\n                <p>\r\n                    latitude: {this.state.position.coords.latitude}\r\n                </p>\r\n                {this.state.error &&\r\n                    <h4 className=\"has-text-danger\">\r\n                        Error Occurred: {'Error Code ' + this.state.errorCode + ': ' + this.state.errorMessage}\r\n                    </h4>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GPS;","import React, { Component } from 'react';\r\n\r\nif (window.MediaRecorder == null) {\r\n    // safari polyfill\r\n    window.MediaRecorder = require('audio-recorder-polyfill');\r\n}\r\n\r\nclass Audio extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: false,\r\n            lastRecorded: null,\r\n            lastRecordedUrl: null,\r\n            mimeType: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(this.recordAudioStream);\r\n    }\r\n\r\n    recordAudioStream = (stream) => {\r\n        // requires https to work on chrome and safari\r\n        // this.player.srcObject = stream;\r\n        this.options = {\r\n            // chrome likes webm\r\n            mimeType: 'audio/webm',\r\n        };\r\n        if (MediaRecorder.isTypeSupported(this.options.mimeType)) {\r\n            this.mediaRecorder = new MediaRecorder(stream, this.options);\r\n        } else {\r\n            // firefox only supports ogg completely\r\n            this.options.mimeType = 'audio/ogg'\r\n            if (MediaRecorder.isTypeSupported(this.options.mimeType)) {\r\n                this.mediaRecorder = new MediaRecorder(stream, this.options);\r\n            } else {\r\n                // safari polyfill\r\n                this.options.mimeType = 'audio/wav'\r\n                if (MediaRecorder.isTypeSupported(this.options.mimeType)) {\r\n                    this.mediaRecorder = new MediaRecorder(stream, this.options);\r\n                } else {\r\n                    this.setState({\r\n                        error: true,\r\n                        message: \"No standard audio codec supported on this device.\",\r\n                        code: 1\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            mimeType: this.options.mimeType\r\n        });\r\n\r\n        this.props.newMediaRecorder(this.mediaRecorder, this.options.mimeType);\r\n\r\n        // this.mediaRecorder.addEventListener('stop', this.save_recording);\r\n    }\r\n\r\n    render() {\r\n        let recordedAudioURL = null;\r\n        if (this.props.recordedAudio) {\r\n            recordedAudioURL = window.URL.createObjectURL(this.props.recordedAudio);\r\n        }\r\n        return (\r\n            <div id=\"audio\">\r\n                <h3 className=\"title is-3\">Audio Module</h3>\r\n                <p>\r\n                    Recording Codec: {this.state.mimeType}\r\n                </p>\r\n                {this.props.recordedAudio &&\r\n                    <div>\r\n                        {this.state.mimeType !== 'audio/webm' &&\r\n                            <div className='box'>\r\n                                {/*<audio id=\"player\" controls src={recordedAudioURL}></audio>*/}\r\n                                <audio id=\"player\" controls key={recordedAudioURL}>\r\n                                    <source key={recordedAudioURL} type={this.options.mimeType} src={recordedAudioURL}></source>\r\n                                </audio>\r\n                            </div>\r\n                        }\r\n                        {this.state.mimeType === 'audio/webm' &&\r\n                            <div className='box'>\r\n                                {/*<video id=\"player\" controls src={recordedAudioURL}></video>*/}\r\n                                {/* we need video because chrome is dumb */}\r\n                                <video id=\"player\" controls key={recordedAudioURL}>\r\n                                    <source key={recordedAudioURL} type={this.state.mimeType} src={recordedAudioURL}></source>\r\n                                </video>\r\n                            </div>\r\n                        }\r\n                        <a className=\"button is-info\" href={recordedAudioURL} download={'audio.' + this.state.mimeType.split('/')[1]}>Download Audio Recording</a>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Audio;","import React, { Component } from 'react';\r\n\r\nclass Marking extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: false,\r\n            lastMark: null,\r\n            leftError: 60,\r\n            rightError: 60\r\n        }\r\n\r\n        this.props.updateError('left', this.state.leftError);\r\n        this.props.updateError('right', this.state.rightError);\r\n    }\r\n\r\n    updateLeftError = (event) => {\r\n        let newValue = event.target.value;\r\n        this.setState({\r\n            leftError: newValue\r\n        });\r\n        if (newValue !== \"NaN\") {\r\n            this.props.updateError('left', parseInt(newValue));\r\n        }\r\n    }\r\n\r\n    updateRightError = (event) => {\r\n        let newValue = event.target.value;\r\n        this.setState({\r\n            rightError: newValue\r\n        });\r\n        if (newValue !== \"NaN\") {\r\n            this.props.updateError('right', parseInt(newValue));\r\n        }\r\n    }\r\n\r\n    mark = () => {\r\n        let timestamp = Date.now();\r\n        this.props.newMark(timestamp);\r\n        this.setState({\r\n            lastMark: timestamp\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"marking\">\r\n                <h3 className=\"title is-3\">Marking Module</h3>\r\n                <p>Marks points in recording data while recording all sensors.</p>\r\n\r\n                <div>\r\n                    <div>Mark Left Error: </div>\r\n                    <input className=\"input\" type=\"number\" step=\"1\" placeholder=\"Leftwards Error\" value={this.state.leftError} onChange={this.updateLeftError} disabled={this.props.errorDisabled} />\r\n                </div>\r\n                <div>\r\n                    <div>Mark Right Error: </div>\r\n                    <input className=\"input\" type=\"number\" step=\"1\" placeholder=\"Rightwards Error\" value={this.state.rightError} onChange={this.updateRightError} disabled={this.props.errorDisabled} />\r\n                </div>\r\n\r\n                {this.state.lastMark && <p>Last Mark: {(new Date(this.state.lastMark)).toString()}</p>}\r\n                {!this.state.lastMark && <p>No marks recorded yet.</p>}\r\n                <button className=\"button is-warning\" onClick={this.mark}>Mark</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Marking;","import React, { Component } from 'react';\nimport Accelerometer from './Accelerometer';\nimport GPS from './GPS';\nimport Audio from './Audio';\nimport Marking from './Marking';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mic: null,\n      recording: false,\n      recordedAudio: null,\n      recordedAudioURL: null,\n      error: false,\n      csv: null\n    };\n\n    this.accelerometerValues = {\n      acceleration: {\n        x: null,\n        y: null,\n        z: null\n      }\n    };\n\n    this.position = {\n      coords: {\n        latitude: null,\n        longitude: null\n      }\n    };\n\n    this.reset();\n    this.blobLengthMS = null;\n  }\n\n  componentDidMount() {\n\n  }\n\n  reset = () => {\n    this.recordedAccelerometerValues = [];\n    this.recordedPositionValues = [];\n    this.recordedMarks = [];\n\n    this.recordedAudioBlobs = [];\n    this.recordedOutput = [];\n    this.fftOutput = [];\n    this.recordedAudioStartTimestamp = null;\n    this.recordedAudioEndTimestamp = null;\n    this.csv = null;\n    this.csvBlob = null;\n\n    this.fr = new FileReader();\n    this.fr.addEventListener('error', (e) => {\n      console.log(e);\n    });\n    this.counter = 0;\n\n    this.lastMark = null;\n  }\n\n  updateAccelerometerValues = (deviceMotionEvent) => {\n    this.accelerometerValues = deviceMotionEvent;\n\n    if (this.state.recording) {\n      this.recordedAccelerometerValues.push([\n        Date.now(),\n        deviceMotionEvent.acceleration.x,\n        deviceMotionEvent.acceleration.x,\n        deviceMotionEvent.acceleration.z\n      ]);\n    }\n  }\n\n  updatePosition = (position) => {\n    this.position = position;\n\n    if (this.state.recording) {\n      this.recordedPositionValues.push([\n        Date.now(),\n        position.coords.longitude,\n        position.coords.latitude\n      ]);\n    }\n  }\n\n  newMediaRecorder = (mediaRecorder, mimeType) => {\n    this.mediaRecorder = mediaRecorder;\n    this.mimeType = mimeType;\n    this.mediaRecorder.addEventListener('stop', this.saveRecording);\n    this.mediaRecorder.addEventListener('error', (e) => {\n      console.log('error in recording audio from mic');\n    });\n    this.mediaRecorder.addEventListener('dataavailable', (event) => {\n        if (event.data.size > 0) {\n            // this.recordedAudioBlobs.push(event.data);\n            this.pushNewAudioBlob(event.data, event);\n        } else {\n            this.pushNewAudioBlob(event.data, event);\n            console.log(\"error in recording maybe\");\n            console.log(event);\n        }\n    });\n  }\n\n  pushNewAudioBlob = (blob, event) => {\n    this.recordedAudioBlobs.push(blob);\n  }\n\n  newMark = (timestamp) => {\n    this.lastMark = timestamp;\n    if (this.state.recording) {\n      this.recordedMarks.push(timestamp);\n    }\n  }\n\n  updateMarkError = (side, error) => {\n    if (side === \"left\") {\n      this.markLeftError = error;\n    } else if (side === \"right\") {\n      this.markRightError = error;\n    }\n  }\n\n  toggleRecording = () => {\n    if (this.state.recording) {\n      this.mediaRecorder.stop();\n      this.setState({\n        recording: false\n      });\n      // below is now called by the mediaRecorder onstop event which is set during this.newMediaRecorder();\n      // this.saveRecording();\n    } else {\n      this.reset();\n\n      this.setState({\n        recordedAudio: null,\n        recordedAudioURL: null,\n        csv: null\n      });\n\n      let timestamp = Date.now();\n      this.recordedAudioStartTimestamp = timestamp;\n\n      this.recordedAccelerometerValues.push([\n        timestamp,\n        this.accelerometerValues.acceleration.x,\n        this.accelerometerValues.acceleration.y,\n        this.accelerometerValues.acceleration.z\n      ]);\n      this.recordedPositionValues.push([\n        timestamp,\n        this.position.coords.longitude,\n        this.position.coords.latitude\n      ]);\n\n      this.mediaRecorder.start(this.blobLengthMS);\n      this.setState({\n        recording: true\n      });\n    }\n  }\n\n  saveRecording = () => {\n    this.recordedAudioEndTimestamp = Date.now();\n    let lr = new Blob(this.recordedAudioBlobs, {\n      type: this.mimeType\n    });\n    this.setState({\n      recordedAudio: lr\n    });\n    this.processRecording(lr);\n  }\n\n  processRecording = (recordedAudio) => {\n    // var recordedAudio = this.state.recordedAudio;\n\n    // used to read in audio as pure bytes\n    this.fr.addEventListener('load', (e) => {\n      // need default audioctx for decodeAudioData method\n      let audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n      audioCtx.decodeAudioData(this.fr.result, (audioBuffer) => {\n        // console.log(audioBuffer);\n\n        let offlineAudioCtx = null;\n        if (window.OfflineAudioContext) {\n          offlineAudioCtx = new window.OfflineAudioContext(audioBuffer.numberOfChannels, audioBuffer.length, audioBuffer.sampleRate);\n        } else if (window.webkitOfflineAudioContext) {\n          // window.alert('' + audioBuffer.numberOfChannels + '\\n' + audioBuffer.length + '\\n' + audioBuffer.sampleRate)\n          offlineAudioCtx = new window.webkitOfflineAudioContext(audioBuffer.numberOfChannels, audioBuffer.length, audioBuffer.sampleRate);\n        } else {\n          this.setState({\n            error: true,\n            errorCode: 2,\n            errorMessage: \"Offline Audio Context not supported by this device.\"\n          });\n        }\n        let source = offlineAudioCtx.createBufferSource();\n        this.analyser = offlineAudioCtx.createAnalyser();\n\n        source.buffer = audioBuffer;\n        // should give us an fft output around every .003 seconds\n        // (1 / (192000/512))\n        let fftSize = 2048.;\n        while ((1. / (audioBuffer.sampleRate / fftSize)) >= 0.003) {\n          if (fftSize === 512.) {\n            break;\n          }\n          fftSize = fftSize / 2;\n        }\n        this.analyser.fftSize = fftSize;\n        // console.log(this.analyser);\n\n        // needs to be created after analyser is initialized\n        let processor = offlineAudioCtx.createScriptProcessor(this.analyser.fftSize, audioBuffer.numberOfChannels, audioBuffer.numberOfChannels);\n\n        // connect the audio nodes together\n        source.connect(this.analyser);\n        this.analyser.connect(processor);\n        processor.connect(offlineAudioCtx.destination);\n\n        // every call means fftSize amount of values have been played and ready to be evaluated by fft\n        processor.onaudioprocess = this.processSample;\n\n        // start processing the audio\n        source.start();\n\n        offlineAudioCtx.oncomplete = (renderedBuffer) => {\n          // console.log(this.recordedAccelerometerValues);\n          // console.log(this.recordedPositionValues);\n          // console.log(this.recordedAudioStartTimestamp);\n          // console.log(this.recordedAudioEndTimestamp);\n          // console.log(this.fftOutput);\n          this.formatData(\n            this.recordedAccelerometerValues,\n            this.recordedPositionValues,\n            this.fftOutput,\n            this.recordedMarks,\n            this.recordedAudioStartTimestamp,\n            this.recordedAudioEndTimestamp\n          );\n        }\n        offlineAudioCtx.startRendering();\n\n      }, (e) => {\n        console.log('error decoding audio');\n        console.log(e);\n      });\n    });\n    // calls the above callback once it's done reading in\n    this.fr.readAsArrayBuffer(recordedAudio);\n  }\n\n  processSample = (e) => {\n    // console.log(e);\n\n    // should equal length (audioBuffer.length) / (analyser.fftSize)) truncated\n    this.counter++;\n    // console.log(this.counter);\n\n    let bufferLength = this.analyser.frequencyBinCount;\n    let dataArray = new Uint8Array(bufferLength);\n    this.analyser.getByteFrequencyData(dataArray);\n    // console.log(dataArray);\n    this.fftOutput.push(dataArray);\n  }\n\n  formatData = (accelerometerValues, positionValues, audioFFTValues, markedValues, startTimestamp, endTimestamp) => {\n    let numberOfMS = endTimestamp - startTimestamp;\n\n    let fftRatio = parseFloat(numberOfMS) / parseFloat(audioFFTValues.length);\n\n    let formattedData = [];\n\n    let accelIndex = 0;\n    let positionIndex = 0;\n    let audioFFTIndex = 0;\n    let audioFFTUntil = fftRatio;\n\n    this.labels = [\n        'timestamp_ms',\n        'acceleration_x',\n        'acceleration_y',\n        'acceleration_z',\n        'latitude',\n        'longitude'\n      ];\n    for (let i = 0; i < audioFFTValues[0].length; i++) {\n      this.labels.push('FFT_bin_' + (i + 1));\n    }\n    this.labels.push('marked');\n\n    for (let i = 0; i < numberOfMS; i++) {\n      let currentTimestamp = startTimestamp + i;\n\n      let accelerometerValue = accelerometerValues[accelIndex];\n      let positionValue = positionValues[positionIndex];\n      let audioFFTValue = audioFFTValues[audioFFTIndex];\n\n      formattedData.push([\n        currentTimestamp,\n        ...accelerometerValue.slice(1),\n        ...positionValue.slice(1),\n        ...audioFFTValue,\n        0\n      ]);\n\n      let nextTimestamp = currentTimestamp + 1;\n\n      // for the following to work we should fast forward index in case...\n\n      if (accelIndex < accelerometerValues.length - 1) {\n        if (accelerometerValue[accelIndex + 1][0] <= nextTimestamp) {\n          accelIndex++;\n        }\n      }\n\n      if (positionIndex < positionValues.length - 1) {\n        if (positionValue[positionIndex + 1][0] <= nextTimestamp) {\n          positionIndex++;\n        }\n      }\n\n      if (i >= parseInt(audioFFTUntil)) {\n        audioFFTUntil += fftRatio;\n        audioFFTIndex++;\n      }\n    }\n\n    for (let markTimestamp of markedValues) {\n      let mark = markTimestamp - startTimestamp;\n\n      let leftMark = mark - this.markLeftError;\n      if (leftMark < 0) {\n        leftMark = 0;\n      }\n\n      let rightMark = mark + this.markRightError;\n      if (rightMark >= formattedData.length) {\n        rightMark = formattedData.length - 1;\n      }\n\n      for (let i = leftMark; i <= rightMark; i++) {\n        formattedData[i][this.labels.length - 1] = 1;\n      }\n    }\n\n    this.formattedData = formattedData;\n\n    this.createCSV(this.formattedData, this.labels);\n  }\n\n  createCSV = (formattedData, labels) => {\n    // let csvContent = \"data:text/csv;charset=utf-8,\";\n    let csvContent = \"\";\n\n    csvContent += labels.join(',') + '\\r\\n';\n\n    formattedData.forEach((arr) => {\n      csvContent += arr.join(',') + '\\r\\n';\n    });\n\n    this.csv = csvContent;\n    this.csvBlob = new Blob([this.csv], {\n      type: 'text/csv'\n    });\n\n    this.setState({\n      csv: window.URL.createObjectURL(this.csvBlob)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.error && <h1 className=\"is-1 has-text-danger\">ERROR</h1>}\n\n        <div className=\"box\">\n          <Accelerometer updateAccelerometerValues={this.updateAccelerometerValues} />\n          {/*<a className=\"button is-danger\" onClick={this.toggleRecordingAccelerometer} href='#'>Record Accelerometer</a>*/}\n        </div>\n\n        <div className=\"box\">\n          <GPS updatePosition={this.updatePosition} enableHighAccuracy={true} maximumAge={0} timeout={1} />\n          {/*<a className=\"button is-danger\" onClick={this.toggleRecordingGPS} href='#'>Record GPS Coordinates</a>*/}\n        </div>\n\n        <div className=\"box\">\n          <Audio recordedAudio={this.state.recordedAudio} newMediaRecorder={this.newMediaRecorder} />\n          {/*<a className=\"button is-danger\" onClick={this.toggleRecordingAudio} href='#'>Record Audio</a>*/}\n        </div>\n\n        <div className=\"box\">\n          <Marking newMark={this.newMark} updateError={this.updateMarkError} errorDisabled={this.state.recording} />\n          {/*<a className=\"button is-danger\" onClick={this.toggleRecordingAudio} href='#'>Record Audio</a>*/}\n        </div>\n\n        <div className=\"box\">\n          <h3 className=\"title is-3\">Record All Sensors</h3>\n          <button className=\"button is-danger\" onClick={this.toggleRecording}>{(!this.state.recording && 'Start') || (this.state.recording && 'Stop')} Recording</button>\n          {this.state.csv != null && <div>\n            <a className=\"button is-info\" href={this.state.csv} download=\"results.csv\">Download csv of all sensor data</a>\n          </div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}